{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","appendRow","removeRow","appendColumn","removeColumn","rowsTable","rows","minLength","maxLength","addEventListener","length","append","cloneNode","disabled","remove","columnTable","cells","i"],"mappings":";AAAA,aAEA,IAAMA,EAAQC,SAASC,cAAc,SAE/BC,EAAYF,SAASC,cAAc,eACnCE,EAAYH,SAASC,cAAc,eAEnCG,EAAeJ,SAASC,cAAc,kBACtCI,EAAeL,SAASC,cAAc,kBAEtCK,EAAYP,EAAMQ,KAElBC,EAAY,EACZC,EAAY,GAElBP,EAAUQ,iBAAiB,QAAS,WAC9BJ,EAAUK,QAAUF,GACtBV,EAAMa,OAAON,EAAU,GAAGO,WAAU,IAGlCP,EAAUK,SAAWF,EACvBP,EAAUY,UAAW,EAErBX,EAAUW,UAAW,IAIzBX,EAAUO,iBAAiB,QAAS,WAC9BJ,EAAUK,QAAUH,GACtBF,EAAU,GAAGS,SAGXT,EAAUK,SAAWH,EACvBL,EAAUW,UAAW,EAErBZ,EAAUY,UAAW,IAIzBV,EAAaM,iBAAiB,QAAS,WAGhC,IAFCM,IAAAA,EAAcV,EAAU,GAAGW,MAExBC,EAAI,EAAGA,EAAIZ,EAAUK,OAAQO,IAChCF,EAAYL,QAAUF,GACxBH,EAAUY,GAAGN,OAAON,EAAU,GAAGW,MAAM,GAAGJ,WAAU,IAGlDG,EAAYL,SAAWF,EACzBL,EAAaU,UAAW,EAExBT,EAAaS,UAAW,IAK9BT,EAAaK,iBAAiB,QAAS,WAGhC,IAFCM,IAAAA,EAAcV,EAAU,GAAGW,MAExBC,EAAI,EAAGA,EAAIZ,EAAUK,OAAQO,IAChCF,EAAYL,QAAUH,GACxBF,EAAUY,GAAGD,MAAM,GAAGF,SAGpBC,EAAYL,SAAWH,EACzBH,EAAaS,UAAW,EAExBV,EAAaU,UAAW","file":"main.b7028836.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\n\nconst appendRow = document.querySelector('.append-row');\nconst removeRow = document.querySelector('.remove-row');\n\nconst appendColumn = document.querySelector('.append-column');\nconst removeColumn = document.querySelector('.remove-column');\n\nconst rowsTable = table.rows;\n\nconst minLength = 2;\nconst maxLength = 10;\n\nappendRow.addEventListener('click', () => {\n  if (rowsTable.length <= maxLength) {\n    table.append(rowsTable[0].cloneNode(true));\n  }\n\n  if (rowsTable.length === maxLength) {\n    appendRow.disabled = true;\n  } else {\n    removeRow.disabled = false;\n  }\n});\n\nremoveRow.addEventListener('click', () => {\n  if (rowsTable.length >= minLength) {\n    rowsTable[0].remove();\n  }\n\n  if (rowsTable.length === minLength) {\n    removeRow.disabled = true;\n  } else {\n    appendRow.disabled = false;\n  }\n});\n\nappendColumn.addEventListener('click', () => {\n  const columnTable = rowsTable[0].cells;\n\n  for (let i = 0; i < rowsTable.length; i++) {\n    if (columnTable.length <= maxLength) {\n      rowsTable[i].append(rowsTable[0].cells[0].cloneNode(true));\n    }\n\n    if (columnTable.length === maxLength) {\n      appendColumn.disabled = true;\n    } else {\n      removeColumn.disabled = false;\n    }\n  }\n});\n\nremoveColumn.addEventListener('click', () => {\n  const columnTable = rowsTable[0].cells;\n\n  for (let i = 0; i < rowsTable.length; i++) {\n    if (columnTable.length >= minLength) {\n      rowsTable[i].cells[0].remove();\n    }\n\n    if (columnTable.length === minLength) {\n      removeColumn.disabled = true;\n    } else {\n      appendColumn.disabled = false;\n    }\n  }\n});\n"]}